WITH TBC_CMN_SITE AS (
	SELECT 
		cs.SITE_ID, cs.SITE_CD, cs.SITE_ENG_NAME 
	FROM CMN_SITE cs 
	WHERE cs.SVC_CD ='TBC' AND cs.STATUS ='A' AND nvl(cs.IS_MOCK_UP,0) = 0
	AND (cs.EFFT_DATE IS NULL OR trunc(cs.EFFT_DATE) <= TRUNC(SYSDATE)) 
	AND (cs.EXPY_DATE IS NULL OR trunc(cs.EXPY_DATE) >= TRUNC(SYSDATE))
	AND cs.SITE_ID = DECODE(:i_site_id,'-', cs.SITE_ID, TO_NUMBER(:i_site_id))
)
, TBC_CLC_ENCNTR AS (
	SELECT 
		ce.SITE_ID, ce.PATIENT_KEY 
	FROM CLC_ENCNTR ce 
	INNER JOIN CLN_ENCNTR_TYPE cet ON cet.ENCNTR_TYPE_ID = ce.ENCNTR_TYPE_ID AND cet.ENCNTR_TYPE_CD = 'TBC_CONS'
	INNER JOIN TBC_CMN_SITE cs ON cs.SITE_ID = ce.SITE_ID
	WHERE ce.SVC_CD = 'TBC'
	AND ce.SITE_ID = DECODE(:i_site_id,'-', ce.SITE_ID, TO_NUMBER(:i_site_id))
	AND ce.SDT >= to_date(:i_from_date, 'YYYY-MM-DD') AND ce.SDT < to_date(:i_to_date, 'YYYY-MM-DD') + 1
	AND nvl(ce.IS_CANCEL, 0) = 0
	AND (ce.ENCNTR_STS IS NULL OR ce.ENCNTR_STS <> 'D')
)
, attend AS (
	SELECT 
		DISTINCT ce.SITE_ID, ce.PATIENT_KEY, nvl(pp.NATIONALITY, 'Blank') AS NATIONALITY
	FROM TBC_CLC_ENCNTR ce 
	INNER JOIN PMI_PATIENT pp ON pp.PATIENT_KEY = ce.PATIENT_KEY AND nvl(pp.IS_MOCK_UP,0) = 0
	INNER JOIN PMI_PATIENT_DOCUMENT_PAIR ppdp ON ppdp.PATIENT_KEY = pp.PATIENT_KEY AND ppdp.IS_PRIMARY = 1
	INNER JOIN COD_DOC_TYPE d on ppdp.DOC_TYPE_CD = d.TYPE_CD
	WHERE d.TYPE_CD <> 'ID'
)
SELECT 
	t.SITE_ENG_NAME, 
	t.NATIONALITY,
	t.DISPLAY_SEQ,
	count(attend.SITE_ID) AS COUNT_ATTEND
FROM (
	SELECT 
		cs.SITE_ID, cs.SITE_CD, cs.SITE_ENG_NAME,
		cc.NATIONALITY, cc.DISPLAY_SEQ
	FROM TBC_CMN_SITE cs 
	INNER JOIN (
		SELECT NATIONALITY, 0 AS DISPLAY_SEQ FROM COD_COUNTRY WHERE NATIONALITY IS NOT NULL
		UNION ALL 
		SELECT 'Blank', 1 AS DISPLAY_SEQ FROM dual
	) cc ON 1 = 1
) t
LEFT JOIN attend ON attend.SITE_ID = t.SITE_ID AND attend.NATIONALITY = t.NATIONALITY
GROUP BY 
	t.SITE_ENG_NAME, 
	t.NATIONALITY,
	t.DISPLAY_SEQ
ORDER BY t.SITE_ENG_NAME, decode(t.NATIONALITY,'Chinese',1), t.DISPLAY_SEQ, t.NATIONALITY;


WITH TBC_CMN_SITE AS (
	SELECT 
		cs.SITE_ID, cs.SITE_CD, cs.SITE_ENG_NAME
	FROM CMN_SITE cs 
	WHERE cs.SVC_CD ='TBC' AND cs.STATUS ='A' AND nvl(cs.IS_MOCK_UP,0) = 0
	AND (cs.EFFT_DATE IS NULL OR trunc(cs.EFFT_DATE) <= TRUNC(SYSDATE)) 
	AND (cs.EXPY_DATE IS NULL OR trunc(cs.EXPY_DATE) >= TRUNC(SYSDATE))
	AND cs.SITE_ID = DECODE(:i_site_id,'-', cs.SITE_ID, TO_NUMBER(:i_site_id))
)
, TBC_CLC_ENCNTR AS (
	SELECT 
		ce.SITE_ID, ce.PATIENT_KEY 
	FROM CLC_ENCNTR ce 
	INNER JOIN CLN_ENCNTR_TYPE cet ON cet.ENCNTR_TYPE_ID = ce.ENCNTR_TYPE_ID AND cet.ENCNTR_TYPE_CD = 'TBC_CONS'
	INNER JOIN TBC_CMN_SITE cs ON cs.SITE_ID = ce.SITE_ID
	WHERE ce.SVC_CD = 'TBC'
	AND ce.SITE_ID = DECODE(:i_site_id,'-', ce.SITE_ID, TO_NUMBER(:i_site_id))
	AND ce.SDT >= to_date(:i_from_date, 'YYYY-MM-DD') AND ce.SDT < to_date(:i_to_date, 'YYYY-MM-DD') + 1
	AND nvl(ce.IS_CANCEL, 0) = 0
	AND (ce.ENCNTR_STS IS NULL OR ce.ENCNTR_STS <> 'D')
)
, attend AS (
	SELECT 
		DISTINCT ce.SITE_ID, ce.PATIENT_KEY, d.TYPE_CD 
	FROM TBC_CLC_ENCNTR ce 
	INNER JOIN PMI_PATIENT pp ON pp.PATIENT_KEY = ce.PATIENT_KEY AND nvl(pp.IS_MOCK_UP,0) = 0
	INNER JOIN PMI_PATIENT_DOCUMENT_PAIR ppdp ON ppdp.PATIENT_KEY = pp.PATIENT_KEY AND ppdp.IS_PRIMARY = 1
	INNER JOIN COD_DOC_TYPE d on ppdp.DOC_TYPE_CD = d.TYPE_CD
	WHERE d.TYPE_CD <> 'ID'
)
SELECT 
	t.SITE_ENG_NAME, 
	t.ENG_DESC, 
	t.DISPLAY_SEQ,
	count(attend.SITE_ID) AS COUNT_ATTEND
FROM (
	SELECT 
		cs.SITE_ID, cs.SITE_CD, cs.SITE_ENG_NAME,
		cdt.TYPE_CD, cdt.ENG_DESC, cdt.DISPLAY_SEQ
	FROM TBC_CMN_SITE cs 
	INNER JOIN (
		SELECT TYPE_CD, ENG_DESC, DISPLAY_SEQ FROM COD_DOC_TYPE WHERE CD_FLAG = 'Y' AND TYPE_CD <> 'ID'
	) cdt ON 1 = 1
) t
LEFT JOIN attend ON attend.SITE_ID = t.SITE_ID AND attend.TYPE_CD = t.TYPE_CD
GROUP BY 
	t.SITE_ENG_NAME, 
	t.ENG_DESC,
	t.DISPLAY_SEQ
ORDER BY t.SITE_ENG_NAME, t.DISPLAY_SEQ;


WITH TBC_CMN_SITE AS (
	SELECT 
		cs.SITE_ID, cs.SITE_CD, cs.SITE_ENG_NAME 
	FROM CMN_SITE cs 
	WHERE cs.SVC_CD ='TBC' AND cs.STATUS ='A' AND nvl(cs.IS_MOCK_UP,0) = 0
	AND (cs.EFFT_DATE IS NULL OR trunc(cs.EFFT_DATE) <= TRUNC(SYSDATE)) 
	AND (cs.EXPY_DATE IS NULL OR trunc(cs.EXPY_DATE) >= TRUNC(SYSDATE))
	AND cs.SITE_ID = DECODE(:i_site_id,'-', cs.SITE_ID, TO_NUMBER(:i_site_id))
)
, TBC_CLC_ENCNTR AS (
	SELECT 
		ce.SITE_ID, ce.PATIENT_KEY 
	FROM CLC_ENCNTR ce 
	INNER JOIN CLN_ENCNTR_TYPE cet ON cet.ENCNTR_TYPE_ID = ce.ENCNTR_TYPE_ID AND cet.ENCNTR_TYPE_CD = 'TBC_CONS'
	INNER JOIN TBC_CMN_SITE cs ON cs.SITE_ID = ce.SITE_ID
	WHERE ce.SVC_CD = 'TBC'
	AND ce.SITE_ID = DECODE(:i_site_id,'-', ce.SITE_ID, TO_NUMBER(:i_site_id))
	AND ce.SDT >= to_date(:i_from_date, 'YYYY-MM-DD') AND ce.SDT < to_date(:i_to_date, 'YYYY-MM-DD') + 1
	AND nvl(ce.IS_CANCEL, 0) = 0
	AND (ce.ENCNTR_STS IS NULL OR ce.ENCNTR_STS <> 'D')
)
, attend AS (
	SELECT 
		DISTINCT ce.SITE_ID, ce.PATIENT_KEY, nvl(pp.BIRTH_PLACE_CD,'Blank') AS BIRTH_PLACE_CD
	FROM TBC_CLC_ENCNTR ce 
	INNER JOIN PMI_PATIENT pp ON pp.PATIENT_KEY = ce.PATIENT_KEY AND nvl(pp.IS_MOCK_UP,0) = 0
	INNER JOIN PMI_PATIENT_DOCUMENT_PAIR ppdp ON ppdp.PATIENT_KEY = pp.PATIENT_KEY AND ppdp.IS_PRIMARY = 1
	INNER JOIN COD_DOC_TYPE d on ppdp.DOC_TYPE_CD = d.TYPE_CD
	WHERE d.TYPE_CD <> 'ID'
)
SELECT 
	t.SITE_ENG_NAME, 
	t.COUNTRY_NAME,
	t.DISPLAY_SEQ,
	count(attend.SITE_ID) AS COUNT_ATTEND
FROM (
	SELECT 
		cs.SITE_ID, cs.SITE_CD, cs.SITE_ENG_NAME,
		cc.COUNTRY_CD, cc.COUNTRY_NAME, cc.DISPLAY_SEQ
	FROM TBC_CMN_SITE cs 
	INNER JOIN (
		SELECT COUNTRY_CD, COUNTRY_NAME, DISPLAY_SEQ FROM COD_COUNTRY
		UNION ALL 
		SELECT 'Blank', 'Blank', NULL FROM dual
	) cc ON 1 = 1
) t
LEFT JOIN attend ON attend.SITE_ID = t.SITE_ID AND attend.BIRTH_PLACE_CD = t.COUNTRY_CD
GROUP BY 
	t.SITE_ENG_NAME, 
	t.COUNTRY_NAME,
	t.DISPLAY_SEQ
ORDER BY t.SITE_ENG_NAME, t.DISPLAY_SEQ, CASE WHEN t.COUNTRY_NAME = 'Blank' THEN 1 ELSE 0 END, t.COUNTRY_NAME;


WITH TBC_CMN_SITE AS (
	SELECT 
		cs.SITE_ID, cs.SITE_CD, cs.SITE_ENG_NAME 
	FROM CMN_SITE cs 
	WHERE cs.SVC_CD ='TBC' AND cs.STATUS ='A' AND nvl(cs.IS_MOCK_UP,0) = 0
	AND (cs.EFFT_DATE IS NULL OR trunc(cs.EFFT_DATE) <= TRUNC(SYSDATE)) 
	AND (cs.EXPY_DATE IS NULL OR trunc(cs.EXPY_DATE) >= TRUNC(SYSDATE))
	AND cs.SITE_ID = DECODE(:i_site_id,'-', cs.SITE_ID, TO_NUMBER(:i_site_id))
)
, TBC_CLC_ENCNTR AS (
	SELECT 
		ce.SITE_ID, ce.PATIENT_KEY 
	FROM CLC_ENCNTR ce 
	INNER JOIN CLN_ENCNTR_TYPE cet ON cet.ENCNTR_TYPE_ID = ce.ENCNTR_TYPE_ID AND cet.ENCNTR_TYPE_CD = 'TBC_CONS'
	INNER JOIN TBC_CMN_SITE cs ON cs.SITE_ID = ce.SITE_ID
	WHERE ce.SVC_CD = 'TBC'
	AND ce.SITE_ID = DECODE(:i_site_id,'-', ce.SITE_ID, TO_NUMBER(:i_site_id))
	AND ce.SDT >= to_date(:i_from_date, 'YYYY-MM-DD') AND ce.SDT < to_date(:i_to_date, 'YYYY-MM-DD') + 1
	AND nvl(ce.IS_CANCEL, 0) = 0
	AND (ce.ENCNTR_STS IS NULL OR ce.ENCNTR_STS <> 'D')
)
, attend AS (
	SELECT 
		DISTINCT ce.SITE_ID, pp.PATIENT_KEY, pp.GENDER_CD 
	FROM TBC_CLC_ENCNTR ce 
	INNER JOIN PMI_PATIENT pp ON pp.PATIENT_KEY = ce.PATIENT_KEY AND nvl(pp.IS_MOCK_UP,0) = 0
	INNER JOIN PMI_PATIENT_DOCUMENT_PAIR ppdp ON ppdp.PATIENT_KEY = pp.PATIENT_KEY AND ppdp.IS_PRIMARY = 1
	INNER JOIN COD_DOC_TYPE d on ppdp.DOC_TYPE_CD = d.TYPE_CD
	WHERE d.TYPE_CD <> 'ID'
)
, patientSex AS (
	SELECT 
		REGEXP_SUBSTR(GENDER_CD_LIST,'[^,]+', 1, LEVEL) AS GENDER_CD 
	FROM (
		SELECT 'F,M,U' AS GENDER_CD_LIST FROM dual
	)  
	CONNECT BY LEVEL <= LENGTH(GENDER_CD_LIST) - LENGTH(REPLACE(GENDER_CD_LIST, ',', '')) + 1
)
SELECT 
	cs.SITE_ENG_NAME, 
	cs.GENDER_NAME,
	cs.DISPLAY_SEQ,
	count(attend.SITE_ID) AS COUNT_ATTEND
FROM (
	SELECT 
		tcs.*, 
		GENDER_CD,
		CASE GENDER_CD WHEN 'F' THEN 'Female' WHEN 'M' THEN 'Male' ELSE 'Unknown' END AS GENDER_NAME,
		CASE GENDER_CD WHEN 'F' THEN '1' WHEN 'M' THEN '2' ELSE '3' END AS DISPLAY_SEQ
	FROM TBC_CMN_SITE tcs
	INNER JOIN patientSex ON 1 = 1
) cs
LEFT JOIN attend ON attend.SITE_ID = cs.SITE_ID AND attend.GENDER_CD = cs.GENDER_CD
GROUP BY cs.SITE_ENG_NAME, GENDER_NAME, DISPLAY_SEQ
ORDER BY cs.SITE_ENG_NAME, DISPLAY_SEQ;