
WITH TBC_CONS_ENCNTR_TYPES AS (
	SELECT
		ENCNTR_TYPE_ID
	FROM CLN_ENCNTR_TYPE cet
	WHERE cet.SVC_CD ='TBC'
	AND cet.ENCNTR_TYPE_CD = 'TBC_CONS'
)
,TBC_SITE AS (
	SELECT
		SITE_ID
	FROM CMN_SITE cs
	WHERE cs.SVC_CD ='TBC'
	AND cs.STATUS ='A'
	AND nvl(cs.IS_MOCK_UP, 0) = 0
	AND (cs.EFFT_DATE IS NULL OR trunc(cs.EFFT_DATE) <= TRUNC(SYSDATE))
	AND (cs.EXPY_DATE IS NULL OR trunc(cs.EXPY_DATE) >= TRUNC(SYSDATE))
)
,TBC_CONS_CLC_ENCNTR AS (
	SELECT
		ce.CASE_NO, ce.SDT, pp.OCCUPATION_CATEGORY_CD 
	FROM CLC_ENCNTR ce
	INNER JOIN TBC_SITE cs ON cs.SITE_ID = ce.SITE_ID
	INNER JOIN TBC_CONS_ENCNTR_TYPES ets ON ets.ENCNTR_TYPE_ID = ce.ENCNTR_TYPE_ID
	INNER JOIN PMI_PATIENT pp ON pp.PATIENT_KEY = ce.PATIENT_KEY AND nvl(pp.IS_MOCK_UP,0) = 0
	WHERE ce.ENCNTR_STS <> 'D'
	AND nvl(ce.IS_CANCEL,0) = 0
	AND ce.SVC_CD='TBC'
	AND ce.CASE_NO IS NOT NULL
)
,TBC_CONS_PERIOD_ACTIVE_CASENO AS (
	SELECT DISTINCT ce.CASE_NO 
	FROM TBC_CONS_CLC_ENCNTR ce
	INNER JOIN PMI_CASE pc ON pc.CASE_NO = ce.CASE_NO AND pc.STATUS_CD ='A'
	WHERE SDT >= to_date(:i_startDate,'yyyy-mm-dd') and SDT < to_date(:i_endDate,'yyyy-mm-dd')+1
)
, TBC_CONS_FIRSTVISIT_OCCUPATION AS (
	SELECT
	 	CASE WHEN coc.ENG_DESC ='-' THEN 'N/A' 
             WHEN coc.ENG_DESC IS NULL THEN 'No selection'
             ELSE coc.ENG_DESC END AS ENG_DESC,
		count(1) AS NO_OF_NEW_PATIENT 
	FROM (
		SELECT
		    ce.OCCUPATION_CATEGORY_CD,
			ce.SDT, 
			ROW_NUMBER() OVER (PARTITION BY ce.CASE_NO ORDER BY ce.SDT ASC) AS NUM
		FROM TBC_CONS_CLC_ENCNTR ce
        INNER JOIN TBC_CONS_PERIOD_ACTIVE_CASENO caseNos ON caseNos.CASE_NO = ce.CASE_NO 
	) temp
	LEFT JOIN COD_OCCUPATION_CATGRY coc ON coc.OCCUPATION_CATEGORY_CD = temp.OCCUPATION_CATEGORY_CD AND coc.STATUS = 'A'
	WHERE temp.NUM = 1
	AND temp.SDT >= to_date(:i_startDate,'yyyy-mm-dd') and temp.SDT < to_date(:i_endDate,'yyyy-mm-dd')+1
	GROUP BY ENG_DESC
)
, OCCUPATION AS (
	SELECT
		CASE WHEN coc.ENG_DESC ='-' THEN 'N/A' 
	 	ELSE coc.ENG_DESC END AS ENG_DESC
	FROM COD_OCCUPATION_CATGRY coc 
		WHERE coc.STATUS ='A'
	UNION ALL
	SELECT 'No selection' FROM DUAL
)
SELECT	
	occ.ENG_DESC AS OCCUPATION,
	nvl(d.NO_OF_NEW_PATIENT,0) AS NO_OF_NEW_PATIENT
FROM OCCUPATION occ 
LEFT JOIN TBC_CONS_FIRSTVISIT_OCCUPATION d ON occ.ENG_DESC = d.ENG_DESC
ORDER BY DECODE(occ.ENG_DESC, 'N/A',1,'No selection',2,0),occ.ENG_DESC;